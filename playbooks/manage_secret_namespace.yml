---
- name: Load values-global.yaml
  ansible.builtin.import_playbook: ./load_values_global.yml

- name: Determine main clustergroup_name
  ansible.builtin.import_playbook: ./determine_main_clustergroup.yml

- name: Manage secrets namespace
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars:
    namespace_state: present
    app_namespace: vault
    yq_file: "{{ pattern_dir }}/values-{{ main_clustergroupname }}.yaml"
    ns_found: false
  tasks:
    - name: Get existing namespaces
      ansible.builtin.command:
        cmd: |
          yq '.clusterGroup.namespaces' {{ yq_file }}
      register: current_ns_list
      changed_when: false

    - name: Note that we found namespace '{{ namespace }}' if we did
      ansible.builtin.set_fact:
        ns_found: true
      when: app_namespace in (current_ns_list.stdout | from_yaml)

    - name: Manage namespace '{{ app_namespace }}' to be present
      when: namespace_state == 'present' and not ns_found
      block:
        - name: Add namespace '{{ app_namespace }}'
          ansible.builtin.command: |
            yq -i '.clusterGroup.namespaces += [ "{{ app_namespace }}" ]' {{ yq_file }}

    - name: Manage namespace '{{ app_namespace }}' to be absent
      when: namespace_state == 'absent' and ns_found
      block:
        - name: Remove namespace '{{ app_namespace }}'
          ansible.builtin.command: |
            yq -i 'del(.clusterGroup.namespaces[] | select(. == "{{ app_namespace }}"))' {{ yq_file }}
